Class: Camera
  - Location: ../src/Camera.h
  - Fields:
    - FieldPrototype(name='transform', type='MemoMatrix', is_static=False)
    - FieldPrototype(name='hsize', type='int', is_static=False)
    - FieldPrototype(name='vsize', type='int', is_static=False)
    - FieldPrototype(name='field_of_view', type='double', is_static=False)
    - FieldPrototype(name='pixel_size', type='double', is_static=False)
    - FieldPrototype(name='half_width', type='double', is_static=False)
    - FieldPrototype(name='half_height', type='double', is_static=False)
    - FieldPrototype(name='do_progress_logging', type='bool', is_static=False)
  - Constructors:
    - FunctionPrototype(name='Camera', is_static=True, return_type='Camera', argument_types=['int', 'int', 'double', 'bool'], namespace=None)
    - FunctionPrototype(name='Camera', is_static=True, return_type='Camera', argument_types=['int', 'int', 'double'], namespace=None)
  - Methods:
    - FunctionPrototype(name='set_transform', is_static=False, return_type='void', argument_types=['Matrix'], namespace=None)
    - FunctionPrototype(name='ray_for_pixel', is_static=False, return_type='Ray', argument_types=['int', 'int'], namespace=None)
    - FunctionPrototype(name='render', is_static=False, return_type='Canvas', argument_types=['World'], namespace=None)

Class: RenderTask
  - Location: ../src/Camera.h
  - Fields:
    - FieldPrototype(name='world', type='World', is_static=False)
    - FieldPrototype(name='camera', type='Camera', is_static=False)
    - FieldPrototype(name='start_time', type='long', is_static=False)
    - FieldPrototype(name='end_time', type='long', is_static=False)
    - FieldPrototype(name='active', type='bool', is_static=False)
    - FieldPrototype(name='killed', type='bool', is_static=False)
    - FieldPrototype(name='thread_count', type='int', is_static=False)
    - FieldPrototype(name='threads', type='thread*', is_static=False)
    - FieldPrototype(name='finished_count', type='int', is_static=False)
    - FieldPrototype(name='canvas', type='Canvas*', is_static=False)
    - FieldPrototype(name='frameIndex', type='int', is_static=False)
  - Constructors:
    - FunctionPrototype(name='RenderTask', is_static=True, return_type='RenderTask', argument_types=['World', 'Camera'], namespace=None)
  - Methods:
    - FunctionPrototype(name='start', is_static=False, return_type='void', argument_types=[], namespace=None)
    - FunctionPrototype(name='halt', is_static=False, return_type='void', argument_types=[], namespace=None)
    - FunctionPrototype(name='renderSlice', is_static=False, return_type='void', argument_types=['int', 'int'], namespace=None)
    - FunctionPrototype(name='setResolution', is_static=False, return_type='void', argument_types=['int', 'int'], namespace=None)
    - FunctionPrototype(name='waitForEnd', is_static=False, return_type='void', argument_types=[], namespace=None)
    - FunctionPrototype(name='setThreadCount', is_static=False, return_type='void', argument_types=['int'], namespace=None)
    - FunctionPrototype(name='getCanvas', is_static=False, return_type='Canvas', argument_types=[], namespace=None)
    - FunctionPrototype(name='isDone', is_static=False, return_type='bool', argument_types=[], namespace=None)

Class: Colour
  - Location: ../src/Colour.h
  - Fields:
    - FieldPrototype(name='red', type='double', is_static=False)
    - FieldPrototype(name='green', type='double', is_static=False)
    - FieldPrototype(name='blue', type='double', is_static=False)
  - Constructors:
    - FunctionPrototype(name='Colour', is_static=True, return_type='Colour', argument_types=['double', 'double', 'double'], namespace=None)
    - FunctionPrototype(name='Colour', is_static=True, return_type='Colour', argument_types=[], namespace=None)
  - Methods:
    - FunctionPrototype(name='add', is_static=False, return_type='Colour', argument_types=['Colour'], namespace=None)
    - FunctionPrototype(name='subtract', is_static=False, return_type='Colour', argument_types=['Colour'], namespace=None)
    - FunctionPrototype(name='scale', is_static=False, return_type='Colour', argument_types=['double'], namespace=None)
    - FunctionPrototype(name='multiply', is_static=False, return_type='Colour', argument_types=['Colour'], namespace=None)
    - FunctionPrototype(name='equals', is_static=False, return_type='bool', argument_types=['Colour'], namespace=None)

Class: PointLight
  - Location: ../src/Material.h
  - Fields:
    - FieldPrototype(name='position', type='Tuple', is_static=False)
    - FieldPrototype(name='intensity', type='Colour', is_static=False)
  - Constructors:
    - FunctionPrototype(name='PointLight', is_static=True, return_type='PointLight', argument_types=['Tuple', 'Colour'], namespace=None)
  - Methods:

Class: Material
  - Location: ../src/Material.h
  - Fields:
    - FieldPrototype(name='color', type='Colour', is_static=False)
    - FieldPrototype(name='ambient', type='double', is_static=False)
    - FieldPrototype(name='diffuse', type='double', is_static=False)
    - FieldPrototype(name='specular', type='double', is_static=False)
    - FieldPrototype(name='shininess', type='double', is_static=False)
    - FieldPrototype(name='pattern', type='Pattern*', is_static=False)
  - Constructors:
    - FunctionPrototype(name='Material', is_static=True, return_type='Material', argument_types=[], namespace=None)
  - Methods:
    - FunctionPrototype(name='setPattern', is_static=False, return_type='void', argument_types=['Pattern'], namespace=None)
    - FunctionPrototype(name='equals', is_static=False, return_type='bool', argument_types=['Material'], namespace=None)
    - FunctionPrototype(name='lighting', is_static=False, return_type='Colour', argument_types=['PointLight', 'Tuple', 'Tuple', 'Tuple', 'bool', 'Colour'], namespace=None)
    - FunctionPrototype(name='lighting', is_static=False, return_type='Colour', argument_types=['PointLight', 'Shape*', 'Tuple', 'Tuple', 'Tuple', 'bool'], namespace=None)
    - FunctionPrototype(name='lighting', is_static=False, return_type='Colour', argument_types=['PointLight', 'Tuple', 'Tuple', 'Tuple', 'bool'], namespace=None)

Class: Matrix
  - Location: ../src/Matrix.h
  - Fields:
    - FieldPrototype(name='values[16]', type='double', is_static=False)
    - FieldPrototype(name='size', type='int', is_static=False)
  - Constructors:
    - FunctionPrototype(name='Matrix', is_static=True, return_type='Matrix', argument_types=[], namespace=None)
    - FunctionPrototype(name='Matrix', is_static=True, return_type='Matrix', argument_types=['Matrix'], namespace=None)
    - FunctionPrototype(name='Matrix', is_static=True, return_type='Matrix', argument_types=['Tuple', 'Tuple', 'Tuple', 'Tuple'], namespace=None)
  - Methods:
    - FunctionPrototype(name='add', is_static=False, return_type='Matrix', argument_types=['Matrix'], namespace=None)
    - FunctionPrototype(name='multiply', is_static=False, return_type='Matrix', argument_types=['Matrix'], namespace=None)
    - FunctionPrototype(name='multiply', is_static=False, return_type='Tuple', argument_types=['Tuple'], namespace=None)
    - FunctionPrototype(name='inverse', is_static=False, return_type='Matrix', argument_types=[], namespace=None)
    - FunctionPrototype(name='transpose', is_static=False, return_type='Matrix', argument_types=[], namespace=None)
    - FunctionPrototype(name='determinant', is_static=False, return_type='double', argument_types=[], namespace=None)
    - FunctionPrototype(name='equals', is_static=False, return_type='bool', argument_types=['Matrix'], namespace=None)
    - FunctionPrototype(name='submatrix', is_static=False, return_type='Matrix', argument_types=['int', 'int'], namespace=None)
    - FunctionPrototype(name='print', is_static=False, return_type='void', argument_types=[], namespace=None)
    - FunctionPrototype(name='getSize', is_static=False, return_type='int', argument_types=[], namespace=None)
    - FunctionPrototype(name='transpose_of_inverse', is_static=False, return_type='Matrix', argument_types=[], namespace=None)
    - FunctionPrototype(name='fromRows', is_static=True, return_type='Matrix', argument_types=['Tuple', 'Tuple', 'Tuple', 'Tuple'], namespace='Matrix')
    - FunctionPrototype(name='cofactor', is_static=False, return_type='double', argument_types=['int', 'int'], namespace=None)
    - FunctionPrototype(name='invertible', is_static=False, return_type='bool', argument_types=[], namespace=None)
    - FunctionPrototype(name='get', is_static=False, return_type='double', argument_types=['int', 'int'], namespace=None)
    - FunctionPrototype(name='set', is_static=False, return_type='void', argument_types=['int', 'int', 'double'], namespace=None)
    - FunctionPrototype(name='setCol', is_static=False, return_type='void', argument_types=['int', 'Tuple'], namespace=None)

Class: Transformation
  - Location: ../src/Matrix.h
  - Fields:
  - Constructors:
  - Methods:
    - FunctionPrototype(name='identity', is_static=True, return_type='Matrix', argument_types=[], namespace='Transformation')
    - FunctionPrototype(name='translation', is_static=True, return_type='Matrix', argument_types=['double', 'double', 'double'], namespace='Transformation')
    - FunctionPrototype(name='scaling', is_static=True, return_type='Matrix', argument_types=['double', 'double', 'double'], namespace='Transformation')
    - FunctionPrototype(name='rotation_x', is_static=True, return_type='Matrix', argument_types=['double'], namespace='Transformation')
    - FunctionPrototype(name='rotation_y', is_static=True, return_type='Matrix', argument_types=['double'], namespace='Transformation')
    - FunctionPrototype(name='rotation_z', is_static=True, return_type='Matrix', argument_types=['double'], namespace='Transformation')
    - FunctionPrototype(name='shearing', is_static=True, return_type='Matrix', argument_types=['double', 'double', 'double', 'double', 'double', 'double'], namespace='Transformation')
    - FunctionPrototype(name='view_transform', is_static=True, return_type='Matrix', argument_types=['Tuple', 'Tuple', 'Tuple'], namespace='Transformation')

Class: MemoMatrix extends Matrix
  - Location: ../src/Matrix.h
  - Fields:
    - FieldPrototype(name='memo_inverse', type='Matrix', is_static=False)
    - FieldPrototype(name='memo_transpose_of_inverse', type='Matrix', is_static=False)
    - FieldPrototype(name='values[16]', type='double', is_static=False)
    - FieldPrototype(name='size', type='int', is_static=False)
  - Constructors:
    - FunctionPrototype(name='MemoMatrix', is_static=True, return_type='MemoMatrix', argument_types=['Matrix'], namespace=None)
    - FunctionPrototype(name='MemoMatrix', is_static=True, return_type='MemoMatrix', argument_types=[], namespace=None)
    - FunctionPrototype(name='MemoMatrix', is_static=True, return_type='MemoMatrix', argument_types=['Tuple', 'Tuple', 'Tuple', 'Tuple'], namespace=None)
  - Methods:
    - FunctionPrototype(name='memoize', is_static=False, return_type='void', argument_types=[], namespace=None)
    - FunctionPrototype(name='transpose_of_inverse', is_static=False, return_type='Matrix', argument_types=[], namespace=None)
    - FunctionPrototype(name='inverse', is_static=False, return_type='Matrix', argument_types=[], namespace=None)
    - FunctionPrototype(name='set', is_static=False, return_type='void', argument_types=['int', 'int', 'double'], namespace=None)
    - FunctionPrototype(name='setCol', is_static=False, return_type='void', argument_types=['int', 'Tuple'], namespace=None)
    - FunctionPrototype(name='add', is_static=False, return_type='Matrix', argument_types=['Matrix'], namespace=None)
    - FunctionPrototype(name='multiply', is_static=False, return_type='Matrix', argument_types=['Matrix'], namespace=None)
    - FunctionPrototype(name='multiply', is_static=False, return_type='Tuple', argument_types=['Tuple'], namespace=None)
    - FunctionPrototype(name='inverse', is_static=False, return_type='Matrix', argument_types=[], namespace=None)
    - FunctionPrototype(name='transpose', is_static=False, return_type='Matrix', argument_types=[], namespace=None)
    - FunctionPrototype(name='determinant', is_static=False, return_type='double', argument_types=[], namespace=None)
    - FunctionPrototype(name='equals', is_static=False, return_type='bool', argument_types=['Matrix'], namespace=None)
    - FunctionPrototype(name='submatrix', is_static=False, return_type='Matrix', argument_types=['int', 'int'], namespace=None)
    - FunctionPrototype(name='print', is_static=False, return_type='void', argument_types=[], namespace=None)
    - FunctionPrototype(name='getSize', is_static=False, return_type='int', argument_types=[], namespace=None)
    - FunctionPrototype(name='transpose_of_inverse', is_static=False, return_type='Matrix', argument_types=[], namespace=None)
    - FunctionPrototype(name='fromRows', is_static=True, return_type='Matrix', argument_types=['Tuple', 'Tuple', 'Tuple', 'Tuple'], namespace='Matrix')
    - FunctionPrototype(name='cofactor', is_static=False, return_type='double', argument_types=['int', 'int'], namespace=None)
    - FunctionPrototype(name='invertible', is_static=False, return_type='bool', argument_types=[], namespace=None)
    - FunctionPrototype(name='get', is_static=False, return_type='double', argument_types=['int', 'int'], namespace=None)
    - FunctionPrototype(name='set', is_static=False, return_type='void', argument_types=['int', 'int', 'double'], namespace=None)
    - FunctionPrototype(name='setCol', is_static=False, return_type='void', argument_types=['int', 'Tuple'], namespace=None)

Abstract Class: Pattern
  - Location: ../src/Pattern.h
  - Fields:
    - FieldPrototype(name='transform', type='MemoMatrix', is_static=False)
  - Constructors:
    - FunctionPrototype(name='Pattern', is_static=True, return_type='Pattern', argument_types=[], namespace=None)
  - Methods:
    - FunctionPrototype(name='local_pattern_at', is_static=False, return_type='Colour', argument_types=['Tuple'], namespace=None)
    - FunctionPrototype(name='pattern_at', is_static=False, return_type='Colour', argument_types=['Shape*', 'Tuple'], namespace=None)
    - FunctionPrototype(name='copy', is_static=False, return_type='Pattern*', argument_types=[], namespace=None)
    - FunctionPrototype(name='copy_to', is_static=False, return_type='Pattern*', argument_types=['Pattern*'], namespace=None)
    - FunctionPrototype(name='object_pattern_at', is_static=False, return_type='Colour', argument_types=['Tuple'], namespace=None)

Class: SolidPattern extends Pattern
  - Location: ../src/Pattern.h
  - Fields:
    - FieldPrototype(name='color', type='Colour', is_static=False)
    - FieldPrototype(name='transform', type='MemoMatrix', is_static=False)
  - Constructors:
    - FunctionPrototype(name='SolidPattern', is_static=True, return_type='SolidPattern', argument_types=['Colour'], namespace=None)
  - Methods:
    - FunctionPrototype(name='pattern_at', is_static=False, return_type='Colour', argument_types=['Shape*', 'Tuple'], namespace=None)
    - FunctionPrototype(name='local_pattern_at', is_static=False, return_type='Colour', argument_types=['Tuple'], namespace=None)
    - FunctionPrototype(name='copy', is_static=False, return_type='Pattern*', argument_types=[], namespace=None)
    - FunctionPrototype(name='local_pattern_at', is_static=False, return_type='Colour', argument_types=['Tuple'], namespace=None)
    - FunctionPrototype(name='pattern_at', is_static=False, return_type='Colour', argument_types=['Shape*', 'Tuple'], namespace=None)
    - FunctionPrototype(name='copy', is_static=False, return_type='Pattern*', argument_types=[], namespace=None)
    - FunctionPrototype(name='copy_to', is_static=False, return_type='Pattern*', argument_types=['Pattern*'], namespace=None)
    - FunctionPrototype(name='object_pattern_at', is_static=False, return_type='Colour', argument_types=['Tuple'], namespace=None)

Class: DoublePattern extends Pattern
  - Location: ../src/Pattern.h
  - Fields:
    - FieldPrototype(name='a', type='Pattern*', is_static=False)
    - FieldPrototype(name='b', type='Pattern*', is_static=False)
    - FieldPrototype(name='transform', type='MemoMatrix', is_static=False)
  - Constructors:
    - FunctionPrototype(name='DoublePattern', is_static=True, return_type='DoublePattern', argument_types=['Pattern', 'Pattern'], namespace=None)
    - FunctionPrototype(name='DoublePattern', is_static=True, return_type='DoublePattern', argument_types=['Colour', 'Colour'], namespace=None)
  - Methods:
    - FunctionPrototype(name='local_pattern_at', is_static=False, return_type='Colour', argument_types=['Tuple'], namespace=None)
    - FunctionPrototype(name='pattern_at', is_static=False, return_type='Colour', argument_types=['Shape*', 'Tuple'], namespace=None)
    - FunctionPrototype(name='copy', is_static=False, return_type='Pattern*', argument_types=[], namespace=None)
    - FunctionPrototype(name='copy_to', is_static=False, return_type='Pattern*', argument_types=['Pattern*'], namespace=None)
    - FunctionPrototype(name='object_pattern_at', is_static=False, return_type='Colour', argument_types=['Tuple'], namespace=None)

Class: StripePattern extends DoublePattern
  - Location: ../src/Pattern.h
  - Fields:
    - FieldPrototype(name='a', type='Pattern*', is_static=False)
    - FieldPrototype(name='b', type='Pattern*', is_static=False)
    - FieldPrototype(name='transform', type='MemoMatrix', is_static=False)
  - Constructors:
    - FunctionPrototype(name='StripePattern', is_static=True, return_type='StripePattern', argument_types=['Pattern', 'Pattern'], namespace=None)
    - FunctionPrototype(name='StripePattern', is_static=True, return_type='StripePattern', argument_types=['Colour', 'Colour'], namespace=None)
  - Methods:
    - FunctionPrototype(name='local_pattern_at', is_static=False, return_type='Colour', argument_types=['Tuple'], namespace=None)
    - FunctionPrototype(name='copy', is_static=False, return_type='Pattern*', argument_types=[], namespace=None)
    - FunctionPrototype(name='local_pattern_at', is_static=False, return_type='Colour', argument_types=['Tuple'], namespace=None)
    - FunctionPrototype(name='pattern_at', is_static=False, return_type='Colour', argument_types=['Shape*', 'Tuple'], namespace=None)
    - FunctionPrototype(name='copy', is_static=False, return_type='Pattern*', argument_types=[], namespace=None)
    - FunctionPrototype(name='copy_to', is_static=False, return_type='Pattern*', argument_types=['Pattern*'], namespace=None)
    - FunctionPrototype(name='object_pattern_at', is_static=False, return_type='Colour', argument_types=['Tuple'], namespace=None)

Class: GradientPattern extends DoublePattern
  - Location: ../src/Pattern.h
  - Fields:
    - FieldPrototype(name='a', type='Pattern*', is_static=False)
    - FieldPrototype(name='b', type='Pattern*', is_static=False)
    - FieldPrototype(name='transform', type='MemoMatrix', is_static=False)
  - Constructors:
    - FunctionPrototype(name='GradientPattern', is_static=True, return_type='GradientPattern', argument_types=['Pattern', 'Pattern'], namespace=None)
    - FunctionPrototype(name='GradientPattern', is_static=True, return_type='GradientPattern', argument_types=['Colour', 'Colour'], namespace=None)
  - Methods:
    - FunctionPrototype(name='local_pattern_at', is_static=False, return_type='Colour', argument_types=['Tuple'], namespace=None)
    - FunctionPrototype(name='copy', is_static=False, return_type='Pattern*', argument_types=[], namespace=None)
    - FunctionPrototype(name='local_pattern_at', is_static=False, return_type='Colour', argument_types=['Tuple'], namespace=None)
    - FunctionPrototype(name='pattern_at', is_static=False, return_type='Colour', argument_types=['Shape*', 'Tuple'], namespace=None)
    - FunctionPrototype(name='copy', is_static=False, return_type='Pattern*', argument_types=[], namespace=None)
    - FunctionPrototype(name='copy_to', is_static=False, return_type='Pattern*', argument_types=['Pattern*'], namespace=None)
    - FunctionPrototype(name='object_pattern_at', is_static=False, return_type='Colour', argument_types=['Tuple'], namespace=None)

Class: RepeatingPattern extends Pattern
  - Location: ../src/Pattern.h
  - Fields:
    - FieldPrototype(name='a', type='Pattern*', is_static=False)
    - FieldPrototype(name='transform', type='MemoMatrix', is_static=False)
  - Constructors:
    - FunctionPrototype(name='RepeatingPattern', is_static=True, return_type='RepeatingPattern', argument_types=['Pattern'], namespace=None)
    - FunctionPrototype(name='RepeatingPattern', is_static=True, return_type='RepeatingPattern', argument_types=['Colour'], namespace=None)
  - Methods:
    - FunctionPrototype(name='local_pattern_at', is_static=False, return_type='Colour', argument_types=['Tuple'], namespace=None)
    - FunctionPrototype(name='copy', is_static=False, return_type='Pattern*', argument_types=[], namespace=None)
    - FunctionPrototype(name='local_pattern_at', is_static=False, return_type='Colour', argument_types=['Tuple'], namespace=None)
    - FunctionPrototype(name='pattern_at', is_static=False, return_type='Colour', argument_types=['Shape*', 'Tuple'], namespace=None)
    - FunctionPrototype(name='copy', is_static=False, return_type='Pattern*', argument_types=[], namespace=None)
    - FunctionPrototype(name='copy_to', is_static=False, return_type='Pattern*', argument_types=['Pattern*'], namespace=None)
    - FunctionPrototype(name='object_pattern_at', is_static=False, return_type='Colour', argument_types=['Tuple'], namespace=None)

Class: Ray
  - Location: ../src/Ray.h
  - Fields:
    - FieldPrototype(name='origin', type='Tuple', is_static=False)
    - FieldPrototype(name='direction', type='Tuple', is_static=False)
  - Constructors:
    - FunctionPrototype(name='Ray', is_static=True, return_type='Ray', argument_types=[], namespace=None)
    - FunctionPrototype(name='Ray', is_static=True, return_type='Ray', argument_types=['Tuple', 'Tuple'], namespace=None)
  - Methods:
    - FunctionPrototype(name='position', is_static=False, return_type='Tuple', argument_types=['double'], namespace=None)
    - FunctionPrototype(name='transform', is_static=False, return_type='Ray', argument_types=['Matrix'], namespace=None)

Class: IntersectionComps
  - Location: ../src/Ray.h
  - Fields:
    - FieldPrototype(name='t', type='double', is_static=False)
    - FieldPrototype(name='object', type='Shape*', is_static=False)
    - FieldPrototype(name='point', type='Tuple', is_static=False)
    - FieldPrototype(name='eyev', type='Tuple', is_static=False)
    - FieldPrototype(name='normalv', type='Tuple', is_static=False)
    - FieldPrototype(name='inside', type='bool', is_static=False)
    - FieldPrototype(name='over_point', type='Tuple', is_static=False)
  - Constructors:
  - Methods:

Class: Intersection
  - Location: ../src/Ray.h
  - Fields:
    - FieldPrototype(name='t', type='double', is_static=False)
    - FieldPrototype(name='object', type='Shape*', is_static=False)
  - Constructors:
    - FunctionPrototype(name='Intersection', is_static=True, return_type='Intersection', argument_types=[], namespace=None)
    - FunctionPrototype(name='Intersection', is_static=True, return_type='Intersection', argument_types=['Intersection'], namespace=None)
    - FunctionPrototype(name='Intersection', is_static=True, return_type='Intersection', argument_types=['double', 'Shape'], namespace=None)
  - Methods:
    - FunctionPrototype(name='prepare_computations', is_static=False, return_type='IntersectionComps', argument_types=['Ray'], namespace=None)
    - FunctionPrototype(name='equals', is_static=False, return_type='bool', argument_types=['Intersection'], namespace=None)

Class: Intersections
  - Location: ../src/Ray.h
  - Fields:
    - FieldPrototype(name='>', type='vector<Intersection*', is_static=False)
  - Constructors:
  - Methods:

Class: Tuple
  - Location: ../src/Tuple.h
  - Fields:
    - FieldPrototype(name='values[4]', type='double', is_static=False)
  - Constructors:
    - FunctionPrototype(name='Tuple', is_static=True, return_type='Tuple', argument_types=[], namespace=None)
    - FunctionPrototype(name='Tuple', is_static=True, return_type='Tuple', argument_types=['Tuple'], namespace=None)
    - FunctionPrototype(name='Tuple', is_static=True, return_type='Tuple', argument_types=['double', 'double', 'double', 'double'], namespace=None)
  - Methods:
    - FunctionPrototype(name='isPoint', is_static=False, return_type='bool', argument_types=[], namespace=None)
    - FunctionPrototype(name='isVector', is_static=False, return_type='bool', argument_types=[], namespace=None)
    - FunctionPrototype(name='add', is_static=False, return_type='Tuple', argument_types=['Tuple'], namespace=None)
    - FunctionPrototype(name='subtract', is_static=False, return_type='Tuple', argument_types=['Tuple'], namespace=None)
    - FunctionPrototype(name='negate', is_static=False, return_type='Tuple', argument_types=[], namespace=None)
    - FunctionPrototype(name='scale', is_static=False, return_type='Tuple', argument_types=['double'], namespace=None)
    - FunctionPrototype(name='divide', is_static=False, return_type='Tuple', argument_types=['double'], namespace=None)
    - FunctionPrototype(name='magnitude', is_static=False, return_type='double', argument_types=[], namespace=None)
    - FunctionPrototype(name='normalize', is_static=False, return_type='Tuple', argument_types=[], namespace=None)
    - FunctionPrototype(name='dot', is_static=False, return_type='double', argument_types=['Tuple'], namespace=None)
    - FunctionPrototype(name='cross', is_static=False, return_type='Tuple', argument_types=['Tuple'], namespace=None)
    - FunctionPrototype(name='reflect', is_static=False, return_type='Tuple', argument_types=['Tuple'], namespace=None)
    - FunctionPrototype(name='equals', is_static=False, return_type='bool', argument_types=['Tuple'], namespace=None)
    - FunctionPrototype(name='set', is_static=False, return_type='void', argument_types=['int', 'double'], namespace=None)
    - FunctionPrototype(name='get', is_static=False, return_type='double', argument_types=['int'], namespace=None)
    - FunctionPrototype(name='x', is_static=False, return_type='double', argument_types=[], namespace=None)
    - FunctionPrototype(name='y', is_static=False, return_type='double', argument_types=[], namespace=None)
    - FunctionPrototype(name='z', is_static=False, return_type='double', argument_types=[], namespace=None)
    - FunctionPrototype(name='w', is_static=False, return_type='double', argument_types=[], namespace=None)
    - FunctionPrototype(name='print', is_static=False, return_type='void', argument_types=[], namespace=None)

Class: Point extends Tuple
  - Location: ../src/Tuple.h
  - Fields:
    - FieldPrototype(name='values[4]', type='double', is_static=False)
  - Constructors:
    - FunctionPrototype(name='Point', is_static=True, return_type='Tuple', argument_types=['double', 'double', 'double'], namespace=None)
  - Methods:
    - FunctionPrototype(name='isPoint', is_static=False, return_type='bool', argument_types=[], namespace=None)
    - FunctionPrototype(name='isVector', is_static=False, return_type='bool', argument_types=[], namespace=None)
    - FunctionPrototype(name='add', is_static=False, return_type='Tuple', argument_types=['Tuple'], namespace=None)
    - FunctionPrototype(name='subtract', is_static=False, return_type='Tuple', argument_types=['Tuple'], namespace=None)
    - FunctionPrototype(name='negate', is_static=False, return_type='Tuple', argument_types=[], namespace=None)
    - FunctionPrototype(name='scale', is_static=False, return_type='Tuple', argument_types=['double'], namespace=None)
    - FunctionPrototype(name='divide', is_static=False, return_type='Tuple', argument_types=['double'], namespace=None)
    - FunctionPrototype(name='magnitude', is_static=False, return_type='double', argument_types=[], namespace=None)
    - FunctionPrototype(name='normalize', is_static=False, return_type='Tuple', argument_types=[], namespace=None)
    - FunctionPrototype(name='dot', is_static=False, return_type='double', argument_types=['Tuple'], namespace=None)
    - FunctionPrototype(name='cross', is_static=False, return_type='Tuple', argument_types=['Tuple'], namespace=None)
    - FunctionPrototype(name='reflect', is_static=False, return_type='Tuple', argument_types=['Tuple'], namespace=None)
    - FunctionPrototype(name='equals', is_static=False, return_type='bool', argument_types=['Tuple'], namespace=None)
    - FunctionPrototype(name='set', is_static=False, return_type='void', argument_types=['int', 'double'], namespace=None)
    - FunctionPrototype(name='get', is_static=False, return_type='double', argument_types=['int'], namespace=None)
    - FunctionPrototype(name='x', is_static=False, return_type='double', argument_types=[], namespace=None)
    - FunctionPrototype(name='y', is_static=False, return_type='double', argument_types=[], namespace=None)
    - FunctionPrototype(name='z', is_static=False, return_type='double', argument_types=[], namespace=None)
    - FunctionPrototype(name='w', is_static=False, return_type='double', argument_types=[], namespace=None)
    - FunctionPrototype(name='print', is_static=False, return_type='void', argument_types=[], namespace=None)

Class: Vector extends Tuple
  - Location: ../src/Tuple.h
  - Fields:
    - FieldPrototype(name='values[4]', type='double', is_static=False)
  - Constructors:
    - FunctionPrototype(name='Vector', is_static=True, return_type='Tuple', argument_types=['double', 'double', 'double'], namespace=None)
  - Methods:
    - FunctionPrototype(name='isPoint', is_static=False, return_type='bool', argument_types=[], namespace=None)
    - FunctionPrototype(name='isVector', is_static=False, return_type='bool', argument_types=[], namespace=None)
    - FunctionPrototype(name='add', is_static=False, return_type='Tuple', argument_types=['Tuple'], namespace=None)
    - FunctionPrototype(name='subtract', is_static=False, return_type='Tuple', argument_types=['Tuple'], namespace=None)
    - FunctionPrototype(name='negate', is_static=False, return_type='Tuple', argument_types=[], namespace=None)
    - FunctionPrototype(name='scale', is_static=False, return_type='Tuple', argument_types=['double'], namespace=None)
    - FunctionPrototype(name='divide', is_static=False, return_type='Tuple', argument_types=['double'], namespace=None)
    - FunctionPrototype(name='magnitude', is_static=False, return_type='double', argument_types=[], namespace=None)
    - FunctionPrototype(name='normalize', is_static=False, return_type='Tuple', argument_types=[], namespace=None)
    - FunctionPrototype(name='dot', is_static=False, return_type='double', argument_types=['Tuple'], namespace=None)
    - FunctionPrototype(name='cross', is_static=False, return_type='Tuple', argument_types=['Tuple'], namespace=None)
    - FunctionPrototype(name='reflect', is_static=False, return_type='Tuple', argument_types=['Tuple'], namespace=None)
    - FunctionPrototype(name='equals', is_static=False, return_type='bool', argument_types=['Tuple'], namespace=None)
    - FunctionPrototype(name='set', is_static=False, return_type='void', argument_types=['int', 'double'], namespace=None)
    - FunctionPrototype(name='get', is_static=False, return_type='double', argument_types=['int'], namespace=None)
    - FunctionPrototype(name='x', is_static=False, return_type='double', argument_types=[], namespace=None)
    - FunctionPrototype(name='y', is_static=False, return_type='double', argument_types=[], namespace=None)
    - FunctionPrototype(name='z', is_static=False, return_type='double', argument_types=[], namespace=None)
    - FunctionPrototype(name='w', is_static=False, return_type='double', argument_types=[], namespace=None)
    - FunctionPrototype(name='print', is_static=False, return_type='void', argument_types=[], namespace=None)

Class: World
  - Location: ../src/World.h
  - Fields:
    - FieldPrototype(name='>', type='vector<PointLight*', is_static=False)
  - Constructors:
  - Methods:

Class: Canvas
  - Location: ../src/Canvas.h
  - Fields:
    - FieldPrototype(name='width', type='int', is_static=False)
    - FieldPrototype(name='height', type='int', is_static=False)
    - FieldPrototype(name='pixels', type='Colour**', is_static=False)
  - Constructors:
    - FunctionPrototype(name='Canvas', is_static=True, return_type='Canvas', argument_types=[], namespace=None)
    - FunctionPrototype(name='Canvas', is_static=True, return_type='Canvas', argument_types=['int', 'int'], namespace=None)
    - FunctionPrototype(name='Canvas', is_static=True, return_type='Canvas', argument_types=['Canvas'], namespace=None)
  - Methods:
    - FunctionPrototype(name='write_pixel', is_static=False, return_type='void', argument_types=['int', 'int', 'Colour'], namespace=None)
    - FunctionPrototype(name='pixel_at', is_static=False, return_type='Colour', argument_types=['int', 'int'], namespace=None)
    - FunctionPrototype(name='to_ppm', is_static=False, return_type='string', argument_types=[], namespace=None)
    - FunctionPrototype(name='write_ppm', is_static=False, return_type='void', argument_types=['char*'], namespace=None)
    - FunctionPrototype(name='clamp_rgb', is_static=True, return_type='int', argument_types=['double'], namespace='Canvas')

Class: Sphere extends Shape
  - Location: ../src/shapes/Sphere.h
  - Fields:
    - FieldPrototype(name='transform', type='MemoMatrix', is_static=False)
    - FieldPrototype(name='material', type='Material', is_static=False)
  - Constructors:
    - FunctionPrototype(name='Sphere', is_static=True, return_type='Sphere', argument_types=[], namespace=None)
  - Methods:
    - FunctionPrototype(name='local_normal_at', is_static=False, return_type='Tuple', argument_types=['Tuple'], namespace=None)
    - FunctionPrototype(name='local_intersect', is_static=False, return_type='void', argument_types=['Ray', 'Intersections'], namespace=None)
    - FunctionPrototype(name='copy', is_static=False, return_type='Shape*', argument_types=[], namespace=None)
    - FunctionPrototype(name='local_intersect', is_static=False, return_type='Intersections', argument_types=['Ray'], namespace=None)
    - FunctionPrototype(name='intersect', is_static=False, return_type='Intersections', argument_types=['Ray'], namespace=None)
    - FunctionPrototype(name='intersect', is_static=False, return_type='void', argument_types=['Ray', 'Intersections'], namespace=None)
    - FunctionPrototype(name='set_transform', is_static=False, return_type='void', argument_types=['Matrix'], namespace=None)
    - FunctionPrototype(name='normal_at', is_static=False, return_type='Tuple', argument_types=['Tuple'], namespace=None)
    - FunctionPrototype(name='copy', is_static=False, return_type='Shape*', argument_types=[], namespace=None)
    - FunctionPrototype(name='local_normal_at', is_static=False, return_type='Tuple', argument_types=['Tuple'], namespace=None)
    - FunctionPrototype(name='local_intersect', is_static=False, return_type='Intersections', argument_types=['Ray'], namespace=None)
    - FunctionPrototype(name='local_intersect', is_static=False, return_type='void', argument_types=['Ray', 'Intersections'], namespace=None)
    - FunctionPrototype(name='equals', is_static=False, return_type='bool', argument_types=['Shape'], namespace=None)

Class: Plane extends Shape
  - Location: ../src/shapes/Plane.h
  - Fields:
    - FieldPrototype(name='transform', type='MemoMatrix', is_static=False)
    - FieldPrototype(name='material', type='Material', is_static=False)
  - Constructors:
    - FunctionPrototype(name='Plane', is_static=True, return_type='Plane', argument_types=[], namespace=None)
  - Methods:
    - FunctionPrototype(name='local_normal_at', is_static=False, return_type='Tuple', argument_types=['Tuple'], namespace=None)
    - FunctionPrototype(name='local_intersect', is_static=False, return_type='void', argument_types=['Ray', 'Intersections'], namespace=None)
    - FunctionPrototype(name='copy', is_static=False, return_type='Shape*', argument_types=[], namespace=None)
    - FunctionPrototype(name='local_intersect', is_static=False, return_type='Intersections', argument_types=['Ray'], namespace=None)
    - FunctionPrototype(name='intersect', is_static=False, return_type='Intersections', argument_types=['Ray'], namespace=None)
    - FunctionPrototype(name='intersect', is_static=False, return_type='void', argument_types=['Ray', 'Intersections'], namespace=None)
    - FunctionPrototype(name='set_transform', is_static=False, return_type='void', argument_types=['Matrix'], namespace=None)
    - FunctionPrototype(name='normal_at', is_static=False, return_type='Tuple', argument_types=['Tuple'], namespace=None)
    - FunctionPrototype(name='copy', is_static=False, return_type='Shape*', argument_types=[], namespace=None)
    - FunctionPrototype(name='local_normal_at', is_static=False, return_type='Tuple', argument_types=['Tuple'], namespace=None)
    - FunctionPrototype(name='local_intersect', is_static=False, return_type='Intersections', argument_types=['Ray'], namespace=None)
    - FunctionPrototype(name='local_intersect', is_static=False, return_type='void', argument_types=['Ray', 'Intersections'], namespace=None)
    - FunctionPrototype(name='equals', is_static=False, return_type='bool', argument_types=['Shape'], namespace=None)

Abstract Class: Shape
  - Location: ../src/shapes/Shape.h
  - Fields:
    - FieldPrototype(name='transform', type='MemoMatrix', is_static=False)
    - FieldPrototype(name='material', type='Material', is_static=False)
  - Constructors:
    - FunctionPrototype(name='Shape', is_static=True, return_type='Shape', argument_types=[], namespace=None)
  - Methods:
    - FunctionPrototype(name='intersect', is_static=False, return_type='Intersections', argument_types=['Ray'], namespace=None)
    - FunctionPrototype(name='intersect', is_static=False, return_type='void', argument_types=['Ray', 'Intersections'], namespace=None)
    - FunctionPrototype(name='set_transform', is_static=False, return_type='void', argument_types=['Matrix'], namespace=None)
    - FunctionPrototype(name='normal_at', is_static=False, return_type='Tuple', argument_types=['Tuple'], namespace=None)
    - FunctionPrototype(name='copy', is_static=False, return_type='Shape*', argument_types=[], namespace=None)
    - FunctionPrototype(name='local_normal_at', is_static=False, return_type='Tuple', argument_types=['Tuple'], namespace=None)
    - FunctionPrototype(name='local_intersect', is_static=False, return_type='Intersections', argument_types=['Ray'], namespace=None)
    - FunctionPrototype(name='local_intersect', is_static=False, return_type='void', argument_types=['Ray', 'Intersections'], namespace=None)
    - FunctionPrototype(name='equals', is_static=False, return_type='bool', argument_types=['Shape'], namespace=None)

Class: Colour
  - Location: ../src/Colour.h
  - Fields:
    - FieldPrototype(name='red', type='double', is_static=False)
    - FieldPrototype(name='green', type='double', is_static=False)
    - FieldPrototype(name='blue', type='double', is_static=False)
  - Constructors:
    - FunctionPrototype(name='Colour', is_static=True, return_type='Colour', argument_types=['double', 'double', 'double'], namespace=None)
    - FunctionPrototype(name='Colour', is_static=True, return_type='Colour', argument_types=[], namespace=None)
  - Methods:
    - FunctionPrototype(name='add', is_static=False, return_type='Colour', argument_types=['Colour'], namespace=None)
    - FunctionPrototype(name='subtract', is_static=False, return_type='Colour', argument_types=['Colour'], namespace=None)
    - FunctionPrototype(name='scale', is_static=False, return_type='Colour', argument_types=['double'], namespace=None)
    - FunctionPrototype(name='multiply', is_static=False, return_type='Colour', argument_types=['Colour'], namespace=None)
    - FunctionPrototype(name='equals', is_static=False, return_type='bool', argument_types=['Colour'], namespace=None)

